name: Tests
on:
  # pull_request:
  #   branches: [main, develop]
  # push:
  #   branches: [main, develop]
  workflow_run:
    workflows: ["CI"]      # Name of your CI workflow
    types:
      - completed
  #   branches:
  #     - '**'
  #   # Only run if CI succeeded
  #   if: ${{ github.event.workflow_run.conclusion == 'success' }}

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2

    - name: Wait for CI to complete
      uses: lewagon/wait-on-check-action@v1.3.4
      with:
        ref: ${{ github.ref }}
        check-name: 'CI'  # Exact name of your CI check
        repo-token: ${{ secrets.GITHUB_TOKEN }}
        wait-interval: 30

    - name: Check if CI workflow succeeded
      uses: actions/github-script@v6
      id: check_ci
      with:
        github-token: ${{ secrets.GITHUB_TOKEN }}
        script: |
          const prNumber = context.payload.pull_request.number;
          const workflowName = "CI"; // Name of your CI workflow
          const runs = await github.rest.actions.listWorkflowRunsForRepo({
            owner: context.repo.owner,
            repo: context.repo.repo,
            workflow_id: workflowName,
            branch: context.payload.pull_request.head.ref,
            event: "pull_request",
            per_page: 10,
          });

          // Filter runs for this PR
          const runsForPR = runs.data.workflow_runs.filter(run =>
            run.pull_requests.some(pr => pr.number === prNumber)
          );

          // Filter only completed runs
          const completedRuns = runsForPR.filter(run => run.status === "completed");

          if (completedRuns.length === 0) {
            core.setFailed("No completed CI workflow run found for this PR. Please wait for CI to finish.");
            return;
          }

          const latestRun = completedRuns[0];

          if (latestRun.conclusion !== "success") {
            core.setFailed(`CI workflow failed or did not succeed (status: ${latestRun.conclusion}). Stopping Tests.`);
          }
    - name: Install system dependencies
      run: |
        echo 0 | sudo tee /proc/sys/kernel/apparmor_restrict_unprivileged_userns
    - name: Install project dependencies
      run: yarn install

    - name: Run tests
      run: yarn test