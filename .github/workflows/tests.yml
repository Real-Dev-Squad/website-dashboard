name: Tests

on:
  workflow_run:
    workflows: ["CI"]      # Must exactly match your CI workflow name
    types:
      - completed
    branches: [develop, main]              # Adjust branches as needed

jobs:
  test:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2

      - name: Check if CI workflow succeeded
        uses: actions/github-script@v6
        id: check_ci
        with:
          github-token: ${{ secrets.GITHUB_TOKEN }}
          script: |
            const core = require('@actions/core');
            const workflowRun = context.payload.workflow_run;

            // Validate presence of associated PRs
            if (!workflowRun || !workflowRun.pull_requests || workflowRun.pull_requests.length === 0) {
              core.setFailed("No associated pull requests found for this workflow run. Cannot proceed with Tests.");
              return;
            }

            const pr = workflowRun.pull_requests[0];
            const prNumber = pr.number;
            const prBranch = pr.head.ref;

            const workflowName = "CI"; // Your CI workflow name

            // Fetch recent workflow runs for this PR branch and workflow
            const runs = await github.rest.actions.listWorkflowRunsForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              workflow_id: workflowName,
              branch: prBranch,
              event: "pull_request",
              per_page: 5,
            });

            // Filter runs associated with this PR number
            const runsForPR = runs.data.workflow_runs.filter(run =>
              run.pull_requests.some(pr => pr.number === prNumber)
            );

            if (runsForPR.length === 0) {
              core.setFailed(`No CI workflow run found for PR #${prNumber}. Cannot proceed with Tests.`);
              return;
            }

            const latestRun = runsForPR[0];
            if (latestRun.conclusion !== "success") {
              core.setFailed(`CI workflow for PR #${prNumber} did not succeed (status: ${latestRun.conclusion}). Stopping Tests.`);
            }

      - name: Install system dependencies
        run: echo 0 | sudo tee /proc/sys/kernel/apparmor_restrict_unprivileged_userns

      - name: Install project dependencies
        run: yarn install

      - name: Run tests
        run: yarn test
